'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="DFCPS_MANAGEMENT_DB")>  _
Partial Public Class systemDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InserttblJob(instance As tblJob)
    End Sub
  Partial Private Sub UpdatetblJob(instance As tblJob)
    End Sub
  Partial Private Sub DeletetblJob(instance As tblJob)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.DFCPS_MANUFACTURING_SYSTEM.My.MySettings.Default.DFCPS_MANAGEMENT_DBConnectionString2, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property tblJobs() As System.Data.Linq.Table(Of tblJob)
		Get
			Return Me.GetTable(Of tblJob)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.tblJob")>  _
Partial Public Class tblJob
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _id As Integer
	
	Private _jobID As String
	
	Private _dateTrans As System.Nullable(Of Date)
	
	Private _cardID As String
	
	Private _itemNo As String
	
	Private _jobQTY As System.Nullable(Of Decimal)
	
	Private _status As String
	
	Private _remarks As String
	
	Private _userID As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnidChanging(value As Integer)
    End Sub
    Partial Private Sub OnidChanged()
    End Sub
    Partial Private Sub OnjobIDChanging(value As String)
    End Sub
    Partial Private Sub OnjobIDChanged()
    End Sub
    Partial Private Sub OndateTransChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateTransChanged()
    End Sub
    Partial Private Sub OncardIDChanging(value As String)
    End Sub
    Partial Private Sub OncardIDChanged()
    End Sub
    Partial Private Sub OnitemNoChanging(value As String)
    End Sub
    Partial Private Sub OnitemNoChanged()
    End Sub
    Partial Private Sub OnjobQTYChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnjobQTYChanged()
    End Sub
    Partial Private Sub OnstatusChanging(value As String)
    End Sub
    Partial Private Sub OnstatusChanged()
    End Sub
    Partial Private Sub OnremarksChanging(value As String)
    End Sub
    Partial Private Sub OnremarksChanged()
    End Sub
    Partial Private Sub OnuserIDChanging(value As String)
    End Sub
    Partial Private Sub OnuserIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_id", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property id() As Integer
		Get
			Return Me._id
		End Get
		Set
			If ((Me._id = value)  _
						= false) Then
				Me.OnidChanging(value)
				Me.SendPropertyChanging
				Me._id = value
				Me.SendPropertyChanged("id")
				Me.OnidChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jobID", DbType:="VarChar(255) NOT NULL", CanBeNull:=false)>  _
	Public Property jobID() As String
		Get
			Return Me._jobID
		End Get
		Set
			If (String.Equals(Me._jobID, value) = false) Then
				Me.OnjobIDChanging(value)
				Me.SendPropertyChanging
				Me._jobID = value
				Me.SendPropertyChanged("jobID")
				Me.OnjobIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dateTrans", DbType:="DateTime2")>  _
	Public Property dateTrans() As System.Nullable(Of Date)
		Get
			Return Me._dateTrans
		End Get
		Set
			If (Me._dateTrans.Equals(value) = false) Then
				Me.OndateTransChanging(value)
				Me.SendPropertyChanging
				Me._dateTrans = value
				Me.SendPropertyChanged("dateTrans")
				Me.OndateTransChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_cardID", DbType:="VarChar(255)")>  _
	Public Property cardID() As String
		Get
			Return Me._cardID
		End Get
		Set
			If (String.Equals(Me._cardID, value) = false) Then
				Me.OncardIDChanging(value)
				Me.SendPropertyChanging
				Me._cardID = value
				Me.SendPropertyChanged("cardID")
				Me.OncardIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_itemNo", DbType:="VarChar(255)")>  _
	Public Property itemNo() As String
		Get
			Return Me._itemNo
		End Get
		Set
			If (String.Equals(Me._itemNo, value) = false) Then
				Me.OnitemNoChanging(value)
				Me.SendPropertyChanging
				Me._itemNo = value
				Me.SendPropertyChanged("itemNo")
				Me.OnitemNoChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_jobQTY", DbType:="Decimal(20,0)")>  _
	Public Property jobQTY() As System.Nullable(Of Decimal)
		Get
			Return Me._jobQTY
		End Get
		Set
			If (Me._jobQTY.Equals(value) = false) Then
				Me.OnjobQTYChanging(value)
				Me.SendPropertyChanging
				Me._jobQTY = value
				Me.SendPropertyChanged("jobQTY")
				Me.OnjobQTYChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_status", DbType:="VarChar(255)")>  _
	Public Property status() As String
		Get
			Return Me._status
		End Get
		Set
			If (String.Equals(Me._status, value) = false) Then
				Me.OnstatusChanging(value)
				Me.SendPropertyChanging
				Me._status = value
				Me.SendPropertyChanged("status")
				Me.OnstatusChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_remarks", DbType:="VarChar(255)")>  _
	Public Property remarks() As String
		Get
			Return Me._remarks
		End Get
		Set
			If (String.Equals(Me._remarks, value) = false) Then
				Me.OnremarksChanging(value)
				Me.SendPropertyChanging
				Me._remarks = value
				Me.SendPropertyChanged("remarks")
				Me.OnremarksChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userID", DbType:="VarChar(255)")>  _
	Public Property userID() As String
		Get
			Return Me._userID
		End Get
		Set
			If (String.Equals(Me._userID, value) = false) Then
				Me.OnuserIDChanging(value)
				Me.SendPropertyChanging
				Me._userID = value
				Me.SendPropertyChanged("userID")
				Me.OnuserIDChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
